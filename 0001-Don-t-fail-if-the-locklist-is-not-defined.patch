From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Fri, 2 Feb 2018 01:03:50 +0000
Subject: [PATCH] Don't fail if the locklist is not defined

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
---
 plugins/versionlock.py | 13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

diff --git a/plugins/versionlock.py b/plugins/versionlock.py
index be4b6f2..293bf54 100644
--- a/plugins/versionlock.py
+++ b/plugins/versionlock.py
@@ -102,11 +102,6 @@ class VersionLock(dnf.Plugin):
                     locked_names.add(nevra.name)
                     locked_query = locked_query.union(pat_query)
 
-        if count[1]:
-            logger.debug(APPLY_EXCLUDE.format(locklist_fn, count[1]))
-        if count[0]:
-            logger.debug(APPLY_LOCK.format(locklist_fn, count[0]))
-
         if locked_names:
             all_versions = self.base.sack.query().filter(name__glob=list(locked_names))
             other_versions = all_versions.difference(locked_query)
@@ -179,13 +174,13 @@ class VersionLockCommand(dnf.cli.Command):
                 print(pat)
         elif cmd == 'clear':
             if not locklist_fn:
-                raise dnf.exceptions.Error(NO_LOCKLIST)
+                return
             with open(locklist_fn, 'w') as f:
                 # open in write mode truncates file
                 pass
         elif cmd == 'delete':
             if not locklist_fn:
-                raise dnf.exceptions.Error(NO_LOCKLIST)
+                return
             dirname = os.path.dirname(locklist_fn)
             (out, tmpfilename) = tempfile.mkstemp(dir=dirname, suffix='.tmp')
             locked_specs = _read_locklist()
@@ -209,7 +204,7 @@ def _read_locklist():
     locklist = []
     try:
         if not locklist_fn:
-            raise dnf.exceptions.Error(NO_LOCKLIST)
+            return locklist
         with open(locklist_fn) as llfile:
             for line in llfile.readlines():
                 if line.startswith('#') or line.strip() == '':
@@ -254,7 +249,7 @@ def _write_locklist(base, args, raw, try_installed, comment, info, prefix):
     if specs:
         try:
             if not locklist_fn:
-                raise dnf.exceptions.Error(NO_LOCKLIST)
+                return
             with open(locklist_fn, 'a') as f:
                 f.write(comment)
                 for spec in specs:
